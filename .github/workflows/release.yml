name: Release Obsidian Plugin
on:
    push:
        tags:
            - '*'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: pnpm/action-setup@v2
              with:
                version: latest
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18.x'
                  cache: "pnpm"
            - name: Get Version
              id: version
              run: echo "tag=$(git describe --abbrev=0)" >> $GITHUB_OUTPUT
            # Build the plugin
            - name: Build
              id: build
              run: |
                  pnpm install --frozen-lockfile
                  pnpm build --if-present
            # Package the required files into a zip
            - name: Package
              run: |
                  mkdir ${{ github.event.repository.name }}
                  cp main.js manifest.json styles.css README.md ${{ github.event.repository.name }}
                  zip -r ${{ github.event.repository.name }}.zip ${{ github.event.repository.name }}
            # Create the release on github
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  VERSION: ${{ github.ref }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ${{ github.ref }}
                  draft: false
                  prerelease: false
            # Upload the packaged release file
            - name: Upload zip file
              id: upload-zip
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./${{ github.event.repository.name }}.zip
                  asset_name: ${{ github.event.repository.name }}.zip
                  asset_content_type: application/zip
            # Upload the main.js
            - name: Upload main.js
              id: upload-main
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./main.js
                  asset_name: main.js
                  asset_content_type: text/javascript
            # Upload the manifest.json
            - name: Upload manifest.json
              id: upload-manifest
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./manifest.json
                  asset_name: manifest.json
                  asset_content_type: application/json
            # Upload the style.css
            - name: Upload styles.css
              id: upload-css
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./styles.css
                  asset_name: styles.css
                  asset_content_type: text/css